"use strict";(self.webpackChunkaltrone_ui=self.webpackChunkaltrone_ui||[]).push([[355],{"./src/components/indicators/Progress/Progress.stories.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{CircularProgress:()=>CircularProgress,DefaultProgress:()=>DefaultProgress,SegmentedProgress:()=>SegmentedProgress,__namedExportsOrder:()=>__namedExportsOrder,default:()=>Progress_stories});var types=__webpack_require__("./src/types/index.ts"),Progress=__webpack_require__("./src/components/indicators/Progress/index.ts"),StorybookPlayground=__webpack_require__("./src/storybook/StorybookPlayground.tsx"),jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js");function _typeof(obj){return _typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(obj){return typeof obj}:function(obj){return obj&&"function"==typeof Symbol&&obj.constructor===Symbol&&obj!==Symbol.prototype?"symbol":typeof obj},_typeof(obj)}function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);enumerableOnly&&(symbols=symbols.filter((function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable}))),keys.push.apply(keys,symbols)}return keys}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=null!=arguments[i]?arguments[i]:{};i%2?ownKeys(Object(source),!0).forEach((function(key){_defineProperty(target,key,source[key])})):Object.getOwnPropertyDescriptors?Object.defineProperties(target,Object.getOwnPropertyDescriptors(source)):ownKeys(Object(source)).forEach((function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key))}))}return target}function _defineProperty(obj,key,value){return(key=function _toPropertyKey(arg){var key=function _toPrimitive(input,hint){if("object"!==_typeof(input)||null===input)return input;var prim=input[Symbol.toPrimitive];if(void 0!==prim){var res=prim.call(input,hint||"default");if("object"!==_typeof(res))return res;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===hint?String:Number)(input)}(arg,"string");return"symbol"===_typeof(key)?key:String(key)}(key))in obj?Object.defineProperty(obj,key,{value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}function _extends(){return _extends=Object.assign?Object.assign.bind():function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source)Object.prototype.hasOwnProperty.call(source,key)&&(target[key]=source[key])}return target},_extends.apply(this,arguments)}var DefaultProgress={name:"Default Progress",render:function render(_ref){var args=_extends({},(function _objectDestructuringEmpty(obj){if(null==obj)throw new TypeError("Cannot destructure "+obj)}(_ref),_ref));return(0,jsx_runtime.jsx)(Progress.E,_objectSpread(_objectSpread({},args),{},{variant:Progress.n.default}))},decorators:[StorybookPlayground.XS]};function SegmentedProgress_typeof(obj){return SegmentedProgress_typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(obj){return typeof obj}:function(obj){return obj&&"function"==typeof Symbol&&obj.constructor===Symbol&&obj!==Symbol.prototype?"symbol":typeof obj},SegmentedProgress_typeof(obj)}function SegmentedProgress_ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);enumerableOnly&&(symbols=symbols.filter((function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable}))),keys.push.apply(keys,symbols)}return keys}function SegmentedProgress_objectSpread(target){for(var i=1;i<arguments.length;i++){var source=null!=arguments[i]?arguments[i]:{};i%2?SegmentedProgress_ownKeys(Object(source),!0).forEach((function(key){SegmentedProgress_defineProperty(target,key,source[key])})):Object.getOwnPropertyDescriptors?Object.defineProperties(target,Object.getOwnPropertyDescriptors(source)):SegmentedProgress_ownKeys(Object(source)).forEach((function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key))}))}return target}function SegmentedProgress_defineProperty(obj,key,value){return(key=function SegmentedProgress_toPropertyKey(arg){var key=function SegmentedProgress_toPrimitive(input,hint){if("object"!==SegmentedProgress_typeof(input)||null===input)return input;var prim=input[Symbol.toPrimitive];if(void 0!==prim){var res=prim.call(input,hint||"default");if("object"!==SegmentedProgress_typeof(res))return res;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===hint?String:Number)(input)}(arg,"string");return"symbol"===SegmentedProgress_typeof(key)?key:String(key)}(key))in obj?Object.defineProperty(obj,key,{value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}function SegmentedProgress_extends(){return SegmentedProgress_extends=Object.assign?Object.assign.bind():function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source)Object.prototype.hasOwnProperty.call(source,key)&&(target[key]=source[key])}return target},SegmentedProgress_extends.apply(this,arguments)}var SegmentedProgress={name:"Segmented Progress",render:function render(_ref){var args=SegmentedProgress_extends({},(function SegmentedProgress_objectDestructuringEmpty(obj){if(null==obj)throw new TypeError("Cannot destructure "+obj)}(_ref),_ref));return(0,jsx_runtime.jsx)(Progress.E,SegmentedProgress_objectSpread(SegmentedProgress_objectSpread({},args),{},{variant:Progress.n.segmented}))},decorators:[StorybookPlayground.XS]};function CircularProgress_typeof(obj){return CircularProgress_typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(obj){return typeof obj}:function(obj){return obj&&"function"==typeof Symbol&&obj.constructor===Symbol&&obj!==Symbol.prototype?"symbol":typeof obj},CircularProgress_typeof(obj)}function CircularProgress_ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);enumerableOnly&&(symbols=symbols.filter((function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable}))),keys.push.apply(keys,symbols)}return keys}function CircularProgress_objectSpread(target){for(var i=1;i<arguments.length;i++){var source=null!=arguments[i]?arguments[i]:{};i%2?CircularProgress_ownKeys(Object(source),!0).forEach((function(key){CircularProgress_defineProperty(target,key,source[key])})):Object.getOwnPropertyDescriptors?Object.defineProperties(target,Object.getOwnPropertyDescriptors(source)):CircularProgress_ownKeys(Object(source)).forEach((function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key))}))}return target}function CircularProgress_defineProperty(obj,key,value){return(key=function CircularProgress_toPropertyKey(arg){var key=function CircularProgress_toPrimitive(input,hint){if("object"!==CircularProgress_typeof(input)||null===input)return input;var prim=input[Symbol.toPrimitive];if(void 0!==prim){var res=prim.call(input,hint||"default");if("object"!==CircularProgress_typeof(res))return res;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===hint?String:Number)(input)}(arg,"string");return"symbol"===CircularProgress_typeof(key)?key:String(key)}(key))in obj?Object.defineProperty(obj,key,{value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}function CircularProgress_extends(){return CircularProgress_extends=Object.assign?Object.assign.bind():function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source)Object.prototype.hasOwnProperty.call(source,key)&&(target[key]=source[key])}return target},CircularProgress_extends.apply(this,arguments)}var CircularProgress={name:"Circular Progress",render:function render(_ref){var args=CircularProgress_extends({},(function CircularProgress_objectDestructuringEmpty(obj){if(null==obj)throw new TypeError("Cannot destructure "+obj)}(_ref),_ref));return(0,jsx_runtime.jsx)(Progress.E,CircularProgress_objectSpread(CircularProgress_objectSpread({},args),{},{variant:Progress.n.circular}))},decorators:[StorybookPlayground.XS]};const Progress_stories={component:Progress.E,title:"Indicators/Progress",tags:["autodocs"],args:{size:types.$u.medium,value:35,max:100,role:types.uU.default},argTypes:{value:{description:"Current value of the progress"},max:{description:"Maximum value of the progress"},variant:{control:!1,description:"Variant of the progress. In certain circumstances, some variants will be preferred. **Updated in `1.2`**: added `circular` variant"},role:{control:"select",description:"Role of the progress"},size:{control:"select",description:"Size of the progress"},className:{description:"Custom className for loading animation"},ProgressSegmentComponent:{description:"Custom component of segment when segmented variant is used"}}};var __namedExportsOrder=["DefaultProgress","SegmentedProgress","CircularProgress"]}}]);