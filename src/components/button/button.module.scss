@import 'src/global/mixins';

:global(:root) {
  /** text colors */
  --buttonTextColor: var(--default-700);
  --buttonHoverTextColor: var(--default-800);
  --buttonPressTextColor: var(--default-900);
  --buttonTransparentTextColor: var(--default-700);
  --buttonTransparentHoverTextColor: var(--default-800);
  --buttonTransparentPressTextColor: var(--default-900);
  --buttonPrimaryTextColor: var(--default-50);
  --buttonPrimaryHoverTextColor: var(--default-50);
  --buttonPrimaryPressTextColor: var(--default-50);
  --buttonPrimaryTransparentTextColor: var(--primary-500);
  --buttonPrimaryTransparentHoverTextColor: var(--primary-600);
  --buttonPrimaryTransparentPressTextColor: var(--primary-700);
  --buttonSuccessTextColor: var(--default-50);
  --buttonSuccessHoverTextColor: var(--default-50);
  --buttonSuccessPressTextColor: var(--default-50);
  --buttonSuccessTransparentTextColor: var(--success-500);
  --buttonSuccessTransparentHoverTextColor: var(--success-600);
  --buttonSuccessTransparentPressTextColor: var(--success-700);
  --buttonWarningTextColor: var(--default-50);
  --buttonWarningHoverTextColor: var(--default-50);
  --buttonWarningPressTextColor: var(--default-50);
  --buttonWarningTransparentTextColor: var(--warning-500);
  --buttonWarningTransparentHoverTextColor: var(--warning-600);
  --buttonWarningTransparentPressTextColor: var(--warning-700);
  --buttonDangerTextColor: var(--default-50);
  --buttonDangerHoverTextColor: var(--default-50);
  --buttonDangerPressTextColor: var(--default-50);
  --buttonDangerTransparentTextColor: var(--danger-500);
  --buttonDangerTransparentHoverTextColor: var(--danger-600);
  --buttonDangerTransparentPressTextColor: var(--danger-700);

  /** surface colors */
  --buttonBackgroundColor: var(--default-50);
  --buttonBorderColor: var(--default-200);
  --buttonHoverBackgroundColor: var(--default-100);
  --buttonHoverBorderColor: var(--default-200);
  --buttonPressBackgroundColor: var(--default-200);
  --buttonPressBorderColor: var(--default-200);
  --buttonTransparentBackgroundColor: transparent;
  --buttonTransparentHoverBackgroundColor: var(--default-100);
  --buttonTransparentPressBackgroundColor: var(--default-200);
  --buttonPrimaryBackgroundColor: var(--primary-400);
  --buttonPrimaryBorderColor: var(--primary-500);
  --buttonPrimaryHoverBackgroundColor: var(--primary-500);
  --buttonPrimaryHoverBorderColor: var(--primary-600);
  --buttonPrimaryPressBackgroundColor: var(--primary-600);
  --buttonPrimaryPressBorderColor: var(--primary-700);
  --buttonPrimaryTransparentBackgroundColor: transparent;
  --buttonPrimaryTransparentHoverBackgroundColor: var(--primary-50);
  --buttonPrimaryTransparentPressBackgroundColor: var(--primary-100);
  --buttonSuccessBackgroundColor: var(--success-400);
  --buttonSuccessBorderColor: var(--success-500);
  --buttonSuccessHoverBackgroundColor: var(--success-500);
  --buttonSuccessHoverBorderColor: var(--success-600);
  --buttonSuccessPressBackgroundColor: var(--success-600);
  --buttonSuccessPressBorderColor: var(--success-700);
  --buttonSuccessTransparentBackgroundColor: transparent;
  --buttonSuccessTransparentHoverBackgroundColor: var(--success-50);
  --buttonSuccessTransparentPressBackgroundColor: var(--success-100);
  --buttonWarningBackgroundColor: var(--warning-400);
  --buttonWarningBorderColor: var(--warning-500);
  --buttonWarningHoverBackgroundColor: var(--warning-500);
  --buttonWarningHoverBorderColor: var(--warning-600);
  --buttonWarningPressBackgroundColor: var(--warning-600);
  --buttonWarningPressBorderColor: var(--warning-700);
  --buttonWarningTransparentBackgroundColor: transparent;
  --buttonWarningTransparentHoverBackgroundColor: var(--warning-50);
  --buttonWarningTransparentPressBackgroundColor: var(--warning-100);
  --buttonDangerBackgroundColor: var(--danger-400);
  --buttonDangerBorderColor: var(--danger-500);
  --buttonDangerHoverBackgroundColor: var(--danger-500);
  --buttonDangerHoverBorderColor: var(--danger-600);
  --buttonDangerPressBackgroundColor: var(--danger-600);
  --buttonDangerPressBorderColor: var(--danger-700);
  --buttonDangerTransparentBackgroundColor: transparent;
  --buttonDangerTransparentHoverBackgroundColor: var(--danger-50);
  --buttonDangerTransparentPressBackgroundColor: var(--danger-100);

  :global(.AltroneDark) {
    /** text colors */
    --buttonTextColor: var(--default-200);
    --buttonHoverTextColor: var(--default-100);
    --buttonPressTextColor: var(--default-50);
    --buttonTransparentTextColor: var(--default-200);
    --buttonTransparentHoverTextColor: var(--default-100);
    --buttonTransparentPressTextColor: var(--default-50);
    --buttonPrimaryTextColor: var(--default-100);
    --buttonPrimaryHoverTextColor: var(--default-100);
    --buttonPrimaryPressTextColor: var(--default-50);
    --buttonPrimaryTransparentTextColor: var(--primary-700);
    --buttonPrimaryTransparentHoverTextColor: var(--primary-200);
    --buttonPrimaryTransparentPressTextColor: var(--primary-50);
    --buttonSuccessTextColor: var(--default-100);
    --buttonSuccessHoverTextColor: var(--default-100);
    --buttonSuccessPressTextColor: var(--default-50);
    --buttonSuccessTransparentTextColor: var(--success-700);
    --buttonSuccessTransparentHoverTextColor: var(--success-200);
    --buttonSuccessTransparentPressTextColor: var(--success-50);
    --buttonWarningTextColor: var(--default-100);
    --buttonWarningHoverTextColor: var(--default-100);
    --buttonWarningPressTextColor: var(--default-50);
    --buttonWarningTransparentTextColor: var(--warning-700);
    --buttonWarningTransparentHoverTextColor: var(--warning-200);
    --buttonWarningTransparentPressTextColor: var(--warning-50);
    --buttonDangerTextColor: var(--default-100);
    --buttonDangerHoverTextColor: var(--default-100);
    --buttonDangerPressTextColor: var(--default-50);
    --buttonDangerTransparentTextColor: var(--danger-700);
    --buttonDangerTransparentHoverTextColor: var(--danger-100);
    --buttonDangerTransparentPressTextColor: var(--danger-50);

    /** surface colors */
    --buttonBackgroundColor: var(--default-800);
    --buttonBorderColor: var(--default-700);
    --buttonHoverBackgroundColor: var(--default-700);
    --buttonHoverBorderColor: var(--default-600);
    --buttonPressBackgroundColor: var(--default-600);
    --buttonPressBorderColor: var(--default-500);
    --buttonTransparentBackgroundColor: transparent;
    --buttonTransparentHoverBackgroundColor: var(--default-800);
    --buttonTransparentPressBackgroundColor: var(--default-700);
    --buttonPrimaryBackgroundColor: var(--primary-600);
    --buttonPrimaryBorderColor: var(--primary-700);
    --buttonPrimaryHoverBackgroundColor: var(--primary-700);
    --buttonPrimaryHoverBorderColor: var(--primary-800);
    --buttonPrimaryPressBackgroundColor: var(--primary-800);
    --buttonPrimaryPressBorderColor: var(--primary-900);
    --buttonPrimaryTransparentBackgroundColor: transparent;
    --buttonPrimaryTransparentHoverBackgroundColor: var(--primary-900);
    --buttonPrimaryTransparentPressBackgroundColor: var(--primary-800);
    --buttonSuccessBackgroundColor: var(--success-600);
    --buttonSuccessBorderColor: var(--success-700);
    --buttonSuccessHoverBackgroundColor: var(--success-700);
    --buttonSuccessHoverBorderColor: var(--success-800);
    --buttonSuccessPressBackgroundColor: var(--success-800);
    --buttonSuccessPressBorderColor: var(--success-900);
    --buttonSuccessTransparentBackgroundColor: transparent;
    --buttonSuccessTransparentHoverBackgroundColor: var(--success-900);
    --buttonSuccessTransparentPressBackgroundColor: var(--success-800);
    --buttonWarningBackgroundColor: var(--warning-600);
    --buttonWarningBorderColor: var(--warning-700);
    --buttonWarningHoverBackgroundColor: var(--warning-700);
    --buttonWarningHoverBorderColor: var(--warning-800);
    --buttonWarningPressBackgroundColor: var(--warning-800);
    --buttonWarningPressBorderColor: var(--warning-900);
    --buttonWarningTransparentBackgroundColor: transparent;
    --buttonWarningTransparentHoverBackgroundColor: var(--warning-900);
    --buttonWarningTransparentPressBackgroundColor: var(--warning-800);
    --buttonDangerBackgroundColor: var(--danger-600);
    --buttonDangerBorderColor: var(--danger-700);
    --buttonDangerHoverBackgroundColor: var(--danger-700);
    --buttonDangerHoverBorderColor: var(--danger-800);
    --buttonDangerPressBackgroundColor: var(--danger-800);
    --buttonDangerPressBorderColor: var(--danger-900);
    --buttonDangerTransparentBackgroundColor: transparent;
    --buttonDangerTransparentHoverBackgroundColor: var(--danger-900);
    --buttonDangerTransparentPressBackgroundColor: var(--danger-800);
  }
}

.Button {
  --btnBg: var(--buttonBackgroundColor);
  --btnFg: var(--buttonTextColor);
  --btnBorder: var(--buttonBorderColor);
  --btnFocus: var(--focus);

  display: inline-flex;
  white-space: nowrap;
  position: relative;
  align-items: center;
  background: var(--btnBg);
  border-radius: var(--controlRounding);
  border: none;
  color: var(--btnFg);
  box-shadow: inset 0 0 0 1px var(--btnBorder), var(--buttonShadow);
  padding: var(--xs-gap) var(--gap);
  cursor: pointer;
  min-height: var(--normal-size);
  outline-width: 0;

  @include no-selection;
  @include focus;

  &:hover {
    --btnBg: var(--buttonHoverBackgroundColor);
    --btnFg: var(--buttonHoverTextColor);
    --btnBorder: var(--buttonHoverBorderColor);
  }

  &:active {
    --btnBg: var(--buttonPressBackgroundColor);
    --btnFg: var(--buttonHoverTextColor);
    --btnBorder: var(--buttonPressBorderColor);
  }

  &:disabled {
    opacity: 0.5;
    pointer-events: none;
  }
}

.Label {
  @include label;
  flex: 1;
}

.Icon {
  font-size: 16px;
  height: 16px;
}

.Button_transparent {
  --btnBg: var(--buttonTransparentBackgroundColor);
  --btnFg: var(--buttonTransparentTextColor);

  box-shadow: none;

  &:hover {
    --btnBg: var(--buttonTransparentHoverBackgroundColor);
    --btnFg: var(--buttonTransparentHoverTextColor);
  }

  &:active {
    --btnBg: var(--buttonTransparentPressBackgroundColor);
    --btnFg: var(--buttonTransparentPressTextColor);
  }
}

.Primary {
  --btnBg: var(--buttonPrimaryBackgroundColor);
  --btnFg: var(--buttonPrimaryTextColor);
  --btnBorder: var(--buttonPrimaryBorderColor);

  &:hover {
    --btnBg: var(--buttonPrimaryHoverBackgroundColor);
    --btnFg: var(--buttonPrimaryHoverTextColor);
    --btnBorder: var(--buttonPrimaryHoverBorderColor);
  }

  &:active {
    --btnBg: var(--buttonPrimaryPressBackgroundColor);
    --btnFg: var(--buttonPrimaryHoverTextColor);
    --btnBorder: var(--buttonPrimaryPressBorderColor);
  }

  &.Button_transparent {
    --btnBg: var(--buttonPrimaryTransparentBackgroundColor);
    --btnFg: var(--buttonPrimaryTransparentTextColor);

    &:hover {
      --btnBg: var(--buttonPrimaryTransparentHoverBackgroundColor);
      --btnFg: var(--buttonPrimaryTransparentHoverTextColor);
    }

    &:active {
      --btnBg: var(--buttonPrimaryTransparentPressBackgroundColor);
      --btnFg: var(--buttonPrimaryTransparentPressTextColor);
    }
  }
}

.Success {
  --btnBg: var(--buttonSuccessBackgroundColor);
  --btnFg: var(--buttonSuccessTextColor);
  --btnBorder: var(--buttonSuccessBorderColor);
  --btnFocus: var(--focusSuccess);

  &:hover {
    --btnBg: var(--buttonSuccessHoverBackgroundColor);
    --btnFg: var(--buttonSuccessHoverTextColor);
    --btnBorder: var(--buttonSuccessHoverBorderColor);
  }

  &:active {
    --btnBg: var(--buttonSuccessPressBackgroundColor);
    --btnFg: var(--buttonSuccessHoverTextColor);
    --btnBorder: var(--buttonSuccessPressBorderColor);
  }

  &:focus-visible {
    outline-color: var(--focusSuccess);
  }

  &.Button_transparent {
    --btnBg: var(--buttonSuccessTransparentBackgroundColor);
    --btnFg: var(--buttonSuccessTransparentTextColor);

    &:hover {
      --btnBg: var(--buttonSuccessTransparentHoverBackgroundColor);
      --btnFg: var(--buttonSuccessTransparentHoverTextColor);
    }

    &:active {
      --btnBg: var(--buttonSuccessTransparentPressBackgroundColor);
      --btnFg: var(--buttonSuccessTransparentPressTextColor);
    }
  }
}

.Warning {
  --btnBg: var(--buttonWarningBackgroundColor);
  --btnFg: var(--buttonWarningTextColor);
  --btnBorder: var(--buttonWarningBorderColor);
  --btnFocus: var(--focusWarning);

  &:hover {
    --btnBg: var(--buttonWarningHoverBackgroundColor);
    --btnFg: var(--buttonWarningHoverTextColor);
    --btnBorder: var(--buttonWarningHoverBorderColor);
  }

  &:active {
    --btnBg: var(--buttonWarningPressBackgroundColor);
    --btnFg: var(--buttonWarningHoverTextColor);
    --btnBorder: var(--buttonWarningPressBorderColor);
  }

  &:focus-visible {
    outline-color: var(--focusWarning);
  }

  &.Button_transparent {
    --btnBg: var(--buttonWarningTransparentBackgroundColor);
    --btnFg: var(--buttonWarningTransparentTextColor);

    &:hover {
      --btnBg: var(--buttonWarningTransparentHoverBackgroundColor);
      --btnFg: var(--buttonWarningTransparentHoverTextColor);
    }

    &:active {
      --btnBg: var(--buttonWarningTransparentPressBackgroundColor);
      --btnFg: var(--buttonWarningTransparentPressTextColor);
    }
  }
}

.Danger {
  --btnBg: var(--buttonDangerBackgroundColor);
  --btnFg: var(--buttonDangerTextColor);
  --btnBorder: var(--buttonDangerBorderColor);
  --btnFocus: var(--focusDanger);

  &:hover {
    --btnBg: var(--buttonDangerHoverBackgroundColor);
    --btnFg: var(--buttonDangerHoverTextColor);
    --btnBorder: var(--buttonDangerHoverBorderColor);
  }

  &:active {
    --btnBg: var(--buttonDangerPressBackgroundColor);
    --btnFg: var(--buttonDangerHoverTextColor);
    --btnBorder: var(--buttonDangerPressBorderColor);
  }

  &:focus-visible {
    outline-color: var(--focusDanger);
  }

  &.Button_transparent {
    --btnBg: var(--buttonDangerTransparentBackgroundColor);
    --btnFg: var(--buttonDangerTransparentTextColor);

    &:hover {
      --btnBg: var(--buttonDangerTransparentHoverBackgroundColor);
      --btnFg: var(--buttonDangerTransparentHoverTextColor);
    }

    &:active {
      --btnBg: var(--buttonDangerTransparentPressBackgroundColor);
      --btnFg: var(--buttonDangerTransparentPressTextColor);
    }
  }
}

.OnlyIcon {
  width: var(--normal-size);
  padding: var(--xs-gap);
}

.Small {
  min-height: var(--small-size);
  height: var(--small-size);
  align-items: center;

  .Label {
    @include small-label;
  }

  .Icon {
    font-size: 12px;
    height: 12px;
  }

  &.OnlyIcon {
    width: var(--small-size);
    padding: var(--xs-gap);
  }
}

.Large {
  min-height: var(--large-size);
  height: var(--large-size);
  padding: var(--s-gap) var(--l-gap);

  .Label {
    @include label-heading;
  }

  .Icon {
    font-size: 20px;
    height: 20px;
  }

  &.OnlyIcon {
    padding: var(--s-gap);
    width: var(--large-size);
  }
}