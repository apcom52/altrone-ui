@import '../../../_mixins';

@mixin useTransparentVariant($textColor, $interactionTextColor) {
  &.alt-button--variant-transparent {
    --buttonTextColor: var(--#{$textColor});

    @include useInteraction() {
      --buttonTextColor: var(--#{$interactionTextColor});
    }
  }
}

@mixin useTextVariant($textColor) {
  &.alt-button--variant-text {
    --buttonTextColor: var(--#{$textColor});
  }
}

@mixin useButtonSize($height, $fontSize, $paddingVertical, $paddingHorizontal, $iconGap, $iconShift) {
  height: var(--#{$height});
  font-size: $fontSize;
  padding: $paddingVertical $paddingHorizontal;

  .alt-button__leftIcon {
    left: $paddingHorizontal + $iconShift;
    margin-right: $iconGap;
    margin-left: $iconShift;
  }

  .alt-button__rightIcon {
    right: $paddingHorizontal + $iconShift;
    margin-left: $iconGap;
    margin-right: $iconShift;
  }
}

.alt-button {
  --buttonBackgroundColor: var(--surface);
  --buttonTextColor: var(--textColor);
  --buttonShadowColor: var(--borderColor);

  display: inline-flex;
  position: relative;
  margin: 0;
  align-items: center;
  justify-content: center;
  border-radius: 8px;
  background-color: var(--buttonBackgroundColor);
  color: var(--buttonTextColor);
  border: none;
  box-shadow: 0 1px 0 0 var(--buttonShadowColor);
  transition: transform var(--transitionDuration) ease,
          opacity var(--transitionDuration) ease,
          box-shadow var(--transitionDuration) ease;
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
  cursor: pointer;
  text-decoration: none;
  white-space: nowrap;
  min-width: 60px;

  &:active {
    transform: translateY(2px);
    box-shadow: 0 0.25px 0 0 rgba(black, 0.1);
  }

  &:disabled {
    pointer-events: none;
    opacity: 0.5;
  }

  @include useFocus();
  @include useDisabledUserSelect();
  @include useButtonSize(controlHeight, 14px, 6px, 16px, 8px, -4px);
  @include useFontSize(label, Large);
}

.alt-button__leftIcon, .alt-button__rightIcon {
  display: inline-flex;
  align-items: center;
  font-size: 1.5em;
}

.alt-button--with-icons {

}

.alt-button--variant-borders {
  --buttonBackgroundColor: var(--textColor);

  background-color: transparent;
  box-shadow: none;
  border: 2px solid var(--buttonBackgroundColor);
  color: var(--buttonBackgroundColor);
}

.alt-button--variant-transparent {
  background-color: transparent;
  box-shadow: none;
  transition: transform var(--transitionDuration) ease,
      opacity var(--transitionDuration) ease,
      box-shadow var(--transitionDuration) ease,
      background-color var(--transitionDuration) ease;

  @include useInteraction() {
    background-color: var(--buttonBackgroundColor);
  }
}

.alt-button--variant-text {
  background-color: transparent;
  box-shadow: none;

  @include useInteraction {
    opacity: 0.8;
  }

  &:active {
    box-shadow: unset;
  }
}

.alt-button--role-primary {
  --buttonBackgroundColor: var(--accent);
  --buttonTextColor: var(--textColorOnAccent);
  --buttonShadowColor: var(--accentBorderColor);

  @include useTransparentVariant(accent, textColorOnAccent);
  @include useTextVariant(accent);
}

.alt-button--role-success {
  --buttonBackgroundColor: var(--success);
  --buttonTextColor: var(--textColorOnSuccess);
  --buttonShadowColor: var(--successBorderColor);

  @include useTransparentVariant(success, textColorOnSuccess);
  @include useTextVariant(success);
}

.alt-button--role-danger {
  --buttonBackgroundColor: var(--danger);
  --buttonTextColor: var(--textColorOnDanger);
  --buttonShadowColor: var(--dangerBorderColor);

  @include useTransparentVariant(danger, textColorOnDanger);
  @include useTextVariant(danger);
}


.alt-button--size-small {
  @include useButtonSize(smallControlHeight, 13px, 4px, 10px, 4px, -4px);
}

.alt-button--size-large {
  @include useButtonSize(largeControlHeight, 16px, 10px, 20px, 10px, -6px);
}

.alt-button--size-xlarge {
  @include useButtonSize(xlargeControlHeight, 20px, 12px, 20px, 14px, -8px);
}

.alt-button--fluid {
  position: relative;
  width: 100%;

  .alt-button__leftIcon {
    position: absolute;
  }

  .alt-button__rightIcon {
    position: absolute;
  }
}